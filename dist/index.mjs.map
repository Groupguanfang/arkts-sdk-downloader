{"version":3,"file":"index.mjs","names":["code: DownloadError.Code","options?: DownloadErrorOptions","urls: SdkUrlStorage","version: SdkVersion","arch: SdkArch","os: SdkOS","options: DownloadOptions","options: ResolvedDownloadOptions","options: ResolvedDownloadOptions","options: DownloadOptions","progress","networkSpeed: number","netWorkSpeedUnit: 'KB' | 'MB'","downloadProgressEvent: DownloadProgressEvent"],"sources":["../src/errors/download.ts","../src/enums/sdk.ts","../src/options.ts","../src/download.ts"],"sourcesContent":["export interface DownloadErrorOptions {\n  message?: string\n  cause?: unknown\n}\n\nexport class DownloadError extends Error {\n  constructor(public code: DownloadError.Code, options?: DownloadErrorOptions) {\n    super(options?.message)\n    this.cause = options?.cause\n  }\n}\n\nexport namespace DownloadError {\n  export enum Code {\n    DownloadFailed = 'DOWNLOAD_FAILED',\n    ZipExtractionFailed = 'ZIP_EXTRACTION_FAILED',\n  }\n}\n","export enum SdkVersion {\n  API10 = '4.0.0',\n  API11 = '4.1.0',\n  API12 = '5.0.0',\n  API13 = '5.0.1',\n  API14 = '5.0.2',\n  API15 = '5.0.3',\n  API18 = '5.1.0',\n}\n\nexport enum SdkArch {\n  X86,\n  ARM,\n}\n\nexport enum SdkOS {\n  MacOS,\n  Windows,\n  Linux,\n}\n\nexport type SdkUrlStorage = Record<SdkVersion, Record<SdkArch, Record<SdkOS, string | null>>>\n\nconst urls: SdkUrlStorage = {\n  [SdkVersion.API10]: {\n    [SdkArch.X86]: {\n      [SdkOS.MacOS]: 'https://mirrors.huaweicloud.com/harmonyos/os/4.0-Release/ohos-sdk-mac-public.tar.gz',\n      [SdkOS.Windows]: 'https://mirrors.huaweicloud.com/harmonyos/os/4.0-Release/ohos-sdk-windows_linux-public.tar.gz',\n      [SdkOS.Linux]: 'https://mirrors.huaweicloud.com/harmonyos/os/4.0-Release/ohos-sdk-windows_linux-public.tar.gz',\n    },\n    [SdkArch.ARM]: {\n      [SdkOS.MacOS]: 'https://mirrors.huaweicloud.com/harmonyos/os/4.0-Release/L2-SDK-MAC-M1-PUBLIC.tar.gz',\n      [SdkOS.Windows]: 'https://mirrors.huaweicloud.com/harmonyos/os/4.0-Release/ohos-sdk-windows_linux-public.tar.gz',\n      [SdkOS.Linux]: null,\n    },\n  },\n  [SdkVersion.API11]: {\n    [SdkArch.X86]: {\n      [SdkOS.MacOS]: 'https://mirrors.huaweicloud.com/harmonyos/os/4.1-Release/ohos-sdk-mac-public-signed.tar.gz',\n      [SdkOS.Windows]: 'https://mirrors.huaweicloud.com/harmonyos/os/4.1-Release/ohos-sdk-windows_linux-public.tar.gz',\n      [SdkOS.Linux]: 'https://mirrors.huaweicloud.com/harmonyos/os/4.1-Release/ohos-sdk-windows_linux-public.tar.gz',\n    },\n    [SdkArch.ARM]: {\n      [SdkOS.MacOS]: 'https://mirrors.huaweicloud.com/harmonyos/os/4.1-Release/L2-SDK-MAC-M1-PUBLIC.tar.gz',\n      [SdkOS.Windows]: 'https://mirrors.huaweicloud.com/harmonyos/os/4.1-Release/ohos-sdk-windows_linux-public.tar.gz',\n      [SdkOS.Linux]: null,\n    },\n  },\n  [SdkVersion.API12]: {\n    [SdkArch.X86]: {\n      [SdkOS.MacOS]: 'https://mirrors.huaweicloud.com/harmonyos/os/5.0.0-Release/ohos-sdk-mac-public.tar.gz',\n      [SdkOS.Windows]: 'https://mirrors.huaweicloud.com/harmonyos/os/5.0.0-Release/ohos-sdk-windows_linux-public.tar.gz',\n      [SdkOS.Linux]: 'https://mirrors.huaweicloud.com/harmonyos/os/5.0.0-Release/ohos-sdk-windows_linux-public.tar.gz',\n    },\n    [SdkArch.ARM]: {\n      [SdkOS.MacOS]: 'https://mirrors.huaweicloud.com/harmonyos/os/5.0.0-Release/L2-SDK-MAC-M1-PUBLIC.tar.gz',\n      [SdkOS.Windows]: 'https://mirrors.huaweicloud.com/harmonyos/os/5.0.0-Release/ohos-sdk-windows_linux-public.tar.gz',\n      [SdkOS.Linux]: null,\n    },\n  },\n  [SdkVersion.API13]: {\n    [SdkArch.X86]: {\n      [SdkOS.MacOS]: 'https://mirrors.huaweicloud.com/harmonyos/os/5.0.1-Release/ohos-sdk-mac-public.tar.gz',\n      [SdkOS.Windows]: 'https://mirrors.huaweicloud.com/harmonyos/os/5.0.1-Release/ohos-sdk-windows_linux-public.tar.gz',\n      [SdkOS.Linux]: 'https://mirrors.huaweicloud.com/harmonyos/os/5.0.1-Release/ohos-sdk-windows_linux-public.tar.gz',\n    },\n    [SdkArch.ARM]: {\n      [SdkOS.MacOS]: 'https://mirrors.huaweicloud.com/harmonyos/os/5.0.1-Release/L2-SDK-MAC-M1-PUBLIC.tar.gz',\n      [SdkOS.Windows]: 'https://mirrors.huaweicloud.com/harmonyos/os/5.0.1-Release/ohos-sdk-windows_linux-public.tar.gz',\n      [SdkOS.Linux]: null,\n    },\n  },\n  [SdkVersion.API14]: {\n    [SdkArch.X86]: {\n      [SdkOS.MacOS]: 'https://mirrors.huaweicloud.com/harmonyos/os/5.0.2-Release/ohos-sdk-mac-public.tar.gz',\n      [SdkOS.Windows]: 'https://mirrors.huaweicloud.com/harmonyos/os/5.0.2-Release/ohos-sdk-windows_linux-public.tar.gz',\n      [SdkOS.Linux]: 'https://mirrors.huaweicloud.com/harmonyos/os/5.0.2-Release/ohos-sdk-windows_linux-public.tar.gz',\n    },\n    [SdkArch.ARM]: {\n      [SdkOS.MacOS]: 'https://mirrors.huaweicloud.com/harmonyos/os/5.0.2-Release/L2-SDK-MAC-M1-PUBLIC.tar.gz',\n      [SdkOS.Windows]: 'https://mirrors.huaweicloud.com/harmonyos/os/5.0.2-Release/ohos-sdk-windows_linux-public.tar.gz',\n      [SdkOS.Linux]: null,\n    },\n  },\n  [SdkVersion.API15]: {\n    [SdkArch.X86]: {\n      [SdkOS.MacOS]: 'https://mirrors.huaweicloud.com/harmonyos/os/5.0.3-Release/ohos-sdk-mac-public.tar.gz',\n      [SdkOS.Windows]: 'https://mirrors.huaweicloud.com/harmonyos/os/5.0.3-Release/ohos-sdk-windows_linux-public.tar.gz',\n      [SdkOS.Linux]: 'https://mirrors.huaweicloud.com/harmonyos/os/5.0.3-Release/ohos-sdk-windows_linux-public.tar.gz',\n    },\n    [SdkArch.ARM]: {\n      [SdkOS.MacOS]: 'https://mirrors.huaweicloud.com/harmonyos/os/5.0.3-Release/L2-SDK-MAC-M1-PUBLIC.tar.gz',\n      [SdkOS.Windows]: 'https://mirrors.huaweicloud.com/harmonyos/os/5.0.3-Release/ohos-sdk-windows_linux-public.tar.gz',\n      [SdkOS.Linux]: null,\n    },\n  },\n  [SdkVersion.API18]: {\n    [SdkArch.X86]: {\n      [SdkOS.MacOS]: 'https://mirrors.huaweicloud.com/harmonyos/os/5.1.0-Release/ohos-sdk-mac-public.tar.gz',\n      [SdkOS.Windows]: 'https://mirrors.huaweicloud.com/harmonyos/os/5.1.0-Release/ohos-sdk-windows_linux-public.tar.gz',\n      [SdkOS.Linux]: 'https://mirrors.huaweicloud.com/harmonyos/os/5.1.0-Release/ohos-sdk-windows_linux-public.tar.gz',\n    },\n    [SdkArch.ARM]: {\n      [SdkOS.MacOS]: 'https://mirrors.huaweicloud.com/harmonyos/os/5.1.0-Release/L2-SDK-MAC-M1-PUBLIC.tar.gz',\n      [SdkOS.Windows]: 'https://mirrors.huaweicloud.com/harmonyos/os/5.1.0-Release/ohos-sdk-windows_linux-public.tar.gz',\n      [SdkOS.Linux]: null,\n    },\n  },\n}\n\nexport function getSdkUrl(version: SdkVersion, arch: SdkArch, os: SdkOS): string | null {\n  const url = urls[version]\n  return ((url?.[arch] as any)?.[os]) ?? null\n}\n\nexport function getSdkUrls(): SdkUrlStorage {\n  return urls\n}\n","import type progress from 'progress-stream'\nimport type * as tar from 'tar'\nimport http from 'node:http'\nimport https from 'node:https'\nimport { getSdkUrl, type SdkArch, type SdkOS, type SdkVersion } from './enums/sdk'\nimport { DownloadError } from './errors/download'\n\nexport interface UrlOptions {\n  version: SdkVersion\n  arch: SdkArch\n  os: SdkOS\n}\n\nexport interface DownloadProgressEvent extends progress.Progress {\n  networkSpeed: number\n  netWorkSpeedUnit: 'KB' | 'MB'\n}\n\nexport interface DownloadOptions {\n  /**\n   * The URL of the SDK.\n   */\n  url: string | UrlOptions\n  /**\n   * The cache directory of the tar file.\n   */\n  tarCacheDir: string\n  /**\n   * The target directory of the SDK.\n   */\n  targetDir: string\n  /**\n   * The type of request to use.\n   */\n  requestType?: 'http' | 'https'\n  /**\n   * The start byte of the download. If not specified, the download will start from the beginning.\n   */\n  startByte?: number\n  /**\n   * The callback function to be called when the download progress changes.\n   *\n   * @param e - The progress event.\n   */\n  onProgress?(e: DownloadProgressEvent): void | Promise<void>\n  /**\n   * The callback function to be called when the tar file is extracted.\n   *\n   * @param entry - The entry of the tar file.\n   */\n  onTarExtracted?(entry: tar.ReadEntry): void | Promise<void>\n  /**\n   * The callback function to be called when the zip file is extracted.\n   *\n   * @param entry - The entry of the zip file.\n   */\n  onZipExtracted?(entry: tar.ReadEntry): void | Promise<void>\n  /**\n   * The callback function to be called when the download is complete.\n   */\n  onComplete?(): void | Promise<void>\n}\n\nexport type ResolvedDownloadOptions = Omit<DownloadOptions, 'url'> & {\n  url: string\n  requester: typeof import('node:http') | typeof import('node:https')\n}\n\nexport async function resolveDownloadOptions(options: DownloadOptions): Promise<ResolvedDownloadOptions> {\n  const url = typeof options.url === 'string' ? options.url : getSdkUrl(options.url.version, options.url.arch, options.url.os)\n  if (!url) {\n    throw new DownloadError(DownloadError.Code.DownloadFailed, {\n      message: `Unsupported URL: ${JSON.stringify(options.url)}`,\n    })\n  }\n\n  return {\n    ...options,\n    url,\n    requester: options.requestType === 'http' ? http : https,\n  }\n}\n\nexport async function resolveRequestOptions(options: ResolvedDownloadOptions): Promise<import('node:https').RequestOptions | import('node:http').RequestOptions> {\n  const url = new URL(options.url)\n\n  return {\n    headers: options.startByte\n      ? {\n          Range: `bytes=${options.startByte}-`,\n        }\n      : undefined,\n    method: 'GET',\n    hostname: url.hostname,\n    path: url.pathname,\n    port: url.port,\n    agent: false,\n    rejectUnauthorized: true,\n    servername: url.hostname,\n  }\n}\n","import type { ResolvedDownloadOptions } from './options'\nimport fs from 'node:fs'\nimport Stream from 'node:stream'\nimport { effect, signal } from 'alien-signals'\nimport progress from 'progress-stream'\nimport * as tar from 'tar'\nimport * as unzipper from 'unzipper'\nimport { DownloadError } from './errors/download'\nimport { type DownloadOptions, type DownloadProgressEvent, resolveDownloadOptions, resolveRequestOptions } from './options'\n\nexport interface DownloadStream extends Stream {\n  on(event: 'complete', listener: () => void): this\n  on(event: 'error', listener: (error: Error) => void): this\n}\n\n/**\n * 创建一个合并 tar 和 unzipper 的流\n */\nfunction createTarUnzipStream<T extends Stream = DownloadStream>(options: ResolvedDownloadOptions): T {\n  const count = signal<number>(0)\n  const passThrough = new Stream.PassThrough()\n\n  const tarExtractStream = tar.extract({\n    C: options.tarCacheDir,\n    onReadEntry: (entry) => {\n      const zipExtractStream = unzipper.Extract({ path: options.targetDir })\n        .on('error', error => passThrough.emit('error', new DownloadError(DownloadError.Code.ZipExtractionFailed, { cause: error })))\n        .on('close', () => {\n          options.onZipExtracted?.(entry as unknown as tar.ReadEntry)\n          count(count() + 1)\n        })\n      // 直接将 entry 流到 zip 解压器\n      entry.pipe(zipExtractStream)\n    },\n  })\n\n  // 设置完成监听\n  effect(() => {\n    if (count() >= 5) {\n      passThrough.emit('complete')\n    }\n  })\n\n  // 连接流\n  passThrough.pipe(tarExtractStream)\n    .on('error', error => passThrough.emit('error', new DownloadError(DownloadError.Code.DownloadFailed, { cause: error })))\n\n  return passThrough as unknown as T\n}\n\n/**\n * Download the ArkTS SDK.\n *\n * @param options - The options for the download.\n */\nexport async function download(options: DownloadOptions): Promise<void> {\n  const resolvedOptions = await resolveDownloadOptions(options)\n  const requestOptions = await resolveRequestOptions(resolvedOptions)\n\n  return new Promise<void>((resolve, reject) => {\n    const startTime = Date.now()\n    let lastTime = startTime\n    let lastTransferred = 0\n\n    resolvedOptions.requester.get(requestOptions, (response) => {\n      const totalSize = Number.parseInt(response.headers['content-length'] ?? '0', 10)\n\n      const progressStream = progress({\n        length: totalSize,\n        time: 100,\n      }).on('progress', (progress) => {\n        const currentTime = Date.now()\n        const timeDifferenceMs = currentTime - lastTime\n        const transferredDifference = progress.transferred - lastTransferred\n\n        // 计算网络速度 (字节/秒)\n        const speedBytesPerSecond = timeDifferenceMs > 0 ? (transferredDifference / timeDifferenceMs) * 1000 : 0\n\n        // 转换为合适的单位\n        let networkSpeed: number\n        let netWorkSpeedUnit: 'KB' | 'MB'\n\n        if (speedBytesPerSecond >= 1024 * 1024) {\n          networkSpeed = Math.round((speedBytesPerSecond / (1024 * 1024)) * 100) / 100\n          netWorkSpeedUnit = 'MB'\n        }\n        else {\n          networkSpeed = Math.round((speedBytesPerSecond / 1024) * 100) / 100\n          netWorkSpeedUnit = 'KB'\n        }\n\n        // 创建扩展的进度事件对象\n        const downloadProgressEvent: DownloadProgressEvent = {\n          ...progress,\n          networkSpeed,\n          netWorkSpeedUnit,\n        }\n\n        options.onProgress?.(downloadProgressEvent)\n\n        // 更新记录的时间和传输量\n        lastTime = currentTime\n        lastTransferred = progress.transferred\n      })\n\n      if (!fs.existsSync(options.tarCacheDir))\n        fs.mkdirSync(options.tarCacheDir, { recursive: true })\n\n      const combinedStream = createTarUnzipStream<Stream.Writable>(resolvedOptions)\n      combinedStream.on('complete', () => {\n        options.onComplete?.()\n        resolve()\n      })\n      combinedStream.on('error', error => reject(new DownloadError(DownloadError.Code.DownloadFailed, { cause: error })))\n\n      // 简化的流管道\n      response.pipe(progressStream).pipe(combinedStream)\n    })\n  })\n}\n"],"mappings":";;;;;;;;;;AAKA,IAAa,gBAAb,cAAmC,MAAM;CACvC,YAAmBA,MAA0BC,SAAgC;AAC3E,QAAM,SAAS,QAAQ;EADN;AAEjB,OAAK,QAAQ,SAAS;CACvB;AACF;AAEM;CACE,IAAK,wCAAL;AACL;AACA;;CACD;;;;;;AChBH,IAAY,oDAAL;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AACD;AAED,IAAY,8CAAL;AACL;AACA;;AACD;AAED,IAAY,0CAAL;AACL;AACA;AACA;;AACD;AAID,MAAMC,OAAsB;EACzB,WAAW,QAAQ;GACjB,QAAQ,MAAM;IACZ,MAAM,QAAQ;IACd,MAAM,UAAU;IAChB,MAAM,QAAQ;EAChB;GACA,QAAQ,MAAM;IACZ,MAAM,QAAQ;IACd,MAAM,UAAU;IAChB,MAAM,QAAQ;EAChB;CACF;EACA,WAAW,QAAQ;GACjB,QAAQ,MAAM;IACZ,MAAM,QAAQ;IACd,MAAM,UAAU;IAChB,MAAM,QAAQ;EAChB;GACA,QAAQ,MAAM;IACZ,MAAM,QAAQ;IACd,MAAM,UAAU;IAChB,MAAM,QAAQ;EAChB;CACF;EACA,WAAW,QAAQ;GACjB,QAAQ,MAAM;IACZ,MAAM,QAAQ;IACd,MAAM,UAAU;IAChB,MAAM,QAAQ;EAChB;GACA,QAAQ,MAAM;IACZ,MAAM,QAAQ;IACd,MAAM,UAAU;IAChB,MAAM,QAAQ;EAChB;CACF;EACA,WAAW,QAAQ;GACjB,QAAQ,MAAM;IACZ,MAAM,QAAQ;IACd,MAAM,UAAU;IAChB,MAAM,QAAQ;EAChB;GACA,QAAQ,MAAM;IACZ,MAAM,QAAQ;IACd,MAAM,UAAU;IAChB,MAAM,QAAQ;EAChB;CACF;EACA,WAAW,QAAQ;GACjB,QAAQ,MAAM;IACZ,MAAM,QAAQ;IACd,MAAM,UAAU;IAChB,MAAM,QAAQ;EAChB;GACA,QAAQ,MAAM;IACZ,MAAM,QAAQ;IACd,MAAM,UAAU;IAChB,MAAM,QAAQ;EAChB;CACF;EACA,WAAW,QAAQ;GACjB,QAAQ,MAAM;IACZ,MAAM,QAAQ;IACd,MAAM,UAAU;IAChB,MAAM,QAAQ;EAChB;GACA,QAAQ,MAAM;IACZ,MAAM,QAAQ;IACd,MAAM,UAAU;IAChB,MAAM,QAAQ;EAChB;CACF;EACA,WAAW,QAAQ;GACjB,QAAQ,MAAM;IACZ,MAAM,QAAQ;IACd,MAAM,UAAU;IAChB,MAAM,QAAQ;EAChB;GACA,QAAQ,MAAM;IACZ,MAAM,QAAQ;IACd,MAAM,UAAU;IAChB,MAAM,QAAQ;EAChB;CACF;AACF;AAED,SAAgB,UAAUC,SAAqBC,MAAeC,IAA0B;CACtF,MAAM,MAAM,KAAK;AACjB,SAAS,MAAM,SAAgB,OAAQ;AACxC;AAED,SAAgB,aAA4B;AAC1C,QAAO;AACR;;;;ACjDD,eAAsB,uBAAuBC,SAA4D;CACvG,MAAM,aAAa,QAAQ,QAAQ,WAAW,QAAQ,MAAM,UAAU,QAAQ,IAAI,SAAS,QAAQ,IAAI,MAAM,QAAQ,IAAI,GAAG;AAC5H,MAAK,IACH,OAAM,IAAI,cAAc,cAAc,KAAK,gBAAgB,EACzD,UAAU,mBAAmB,KAAK,UAAU,QAAQ,IAAI,CAAC,EAC1D;AAGH,QAAO;EACL,GAAG;EACH;EACA,WAAW,QAAQ,gBAAgB,SAAS,OAAO;CACpD;AACF;AAED,eAAsB,sBAAsBC,SAAqH;CAC/J,MAAM,MAAM,IAAI,IAAI,QAAQ;AAE5B,QAAO;EACL,SAAS,QAAQ,YACb,EACE,QAAQ,QAAQ,QAAQ,UAAU,GACnC;EAEL,QAAQ;EACR,UAAU,IAAI;EACd,MAAM,IAAI;EACV,MAAM,IAAI;EACV,OAAO;EACP,oBAAoB;EACpB,YAAY,IAAI;CACjB;AACF;;;;;;;AClFD,SAAS,qBAAwDC,SAAqC;CACpG,MAAM,QAAQ,OAAe,EAAE;CAC/B,MAAM,cAAc,IAAI,OAAO;CAE/B,MAAM,mBAAmB,IAAI,QAAQ;EACnC,GAAG,QAAQ;EACX,aAAa,CAAC,UAAU;GACtB,MAAM,mBAAmB,SAAS,QAAQ,EAAE,MAAM,QAAQ,UAAW,EAAC,CACnE,GAAG,SAAS,WAAS,YAAY,KAAK,SAAS,IAAI,cAAc,cAAc,KAAK,qBAAqB,EAAE,OAAO,MAAO,GAAE,CAAC,CAC5H,GAAG,SAAS,MAAM;AACjB,YAAQ,iBAAiB,MAAkC;AAC3D,UAAM,OAAO,GAAG,EAAE;GACnB,EAAC;AAEJ,SAAM,KAAK,iBAAiB;EAC7B;CACF,EAAC;AAGF,QAAO,MAAM;AACX,MAAI,OAAO,IAAI,EACb,aAAY,KAAK,WAAW;CAE/B,EAAC;AAGF,aAAY,KAAK,iBAAiB,CAC/B,GAAG,SAAS,WAAS,YAAY,KAAK,SAAS,IAAI,cAAc,cAAc,KAAK,gBAAgB,EAAE,OAAO,MAAO,GAAE,CAAC;AAE1H,QAAO;AACR;;;;;;AAOD,eAAsB,SAASC,SAAyC;CACtE,MAAM,kBAAkB,MAAM,uBAAuB,QAAQ;CAC7D,MAAM,iBAAiB,MAAM,sBAAsB,gBAAgB;AAEnE,QAAO,IAAI,QAAc,CAAC,SAAS,WAAW;EAC5C,MAAM,YAAY,KAAK,KAAK;EAC5B,IAAI,WAAW;EACf,IAAI,kBAAkB;AAEtB,kBAAgB,UAAU,IAAI,gBAAgB,CAAC,aAAa;GAC1D,MAAM,YAAY,OAAO,SAAS,SAAS,QAAQ,qBAAqB,KAAK,GAAG;GAEhF,MAAM,iBAAiB,SAAS;IAC9B,QAAQ;IACR,MAAM;GACP,EAAC,CAAC,GAAG,YAAY,CAACC,eAAa;IAC9B,MAAM,cAAc,KAAK,KAAK;IAC9B,MAAM,mBAAmB,cAAc;IACvC,MAAM,wBAAwBA,WAAS,cAAc;IAGrD,MAAM,sBAAsB,mBAAmB,IAAK,wBAAwB,mBAAoB,MAAO;IAGvG,IAAIC;IACJ,IAAIC;AAEJ,QAAI,uBAAuB,OAAO,MAAM;AACtC,oBAAe,KAAK,MAAO,uBAAuB,OAAO,QAAS,IAAI,GAAG;AACzE,wBAAmB;IACpB,OACI;AACH,oBAAe,KAAK,MAAO,sBAAsB,OAAQ,IAAI,GAAG;AAChE,wBAAmB;IACpB;IAGD,MAAMC,wBAA+C;KACnD,GAAGH;KACH;KACA;IACD;AAED,YAAQ,aAAa,sBAAsB;AAG3C,eAAW;AACX,sBAAkBA,WAAS;GAC5B,EAAC;AAEF,QAAK,GAAG,WAAW,QAAQ,YAAY,CACrC,IAAG,UAAU,QAAQ,aAAa,EAAE,WAAW,KAAM,EAAC;GAExD,MAAM,iBAAiB,qBAAsC,gBAAgB;AAC7E,kBAAe,GAAG,YAAY,MAAM;AAClC,YAAQ,cAAc;AACtB,aAAS;GACV,EAAC;AACF,kBAAe,GAAG,SAAS,WAAS,OAAO,IAAI,cAAc,cAAc,KAAK,gBAAgB,EAAE,OAAO,MAAO,GAAE,CAAC;AAGnH,YAAS,KAAK,eAAe,CAAC,KAAK,eAAe;EACnD,EAAC;CACH;AACF"}